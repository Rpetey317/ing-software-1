

----SNAPSHOT----(16 April 2024 21:56:19) seconds-brefore-disaster.image priorSource: 6370760!

TextEditorCopy subclass: #SmalltalkEditor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Text'!

TextEditorCopy subclass: #SmalltalkEditor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Text'!

TextEditorCopy subclass: #SmalltalkEditor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Text'!

!classRenamed: #TextEditor as: #TextEditorR stamp: 'RABG 4/16/2024 22:02:58'!
Smalltalk renameClassNamed: #TextEditor as: #TextEditorR!
!TextProvider methodsFor: 'as yet unclassified' stamp: 'RABG 4/16/2024 22:02:58' prior: 16983563 overrides: 16915680!
editorClassFor: textGetter
	^TextEditorR! !
!CodePackageList methodsFor: 'as yet unclassified' stamp: 'RABG 4/16/2024 22:02:58' prior: 16825410 overrides: 16915680!
editorClassFor: textGetter
	textGetter = #description ifTrue: [
		^SmalltalkEditor ].		"To enable saving"
	^TextEditorR! !
!TextEditorTest methodsFor: 'as yet unclassified' stamp: 'RABG 4/16/2024 22:02:58' prior: 50517947!
testUndoRedo
	"
	TextEditorTest new testUndoRedo
	"
	| editor model textComposition m text1 text0 text2 |
	text0 _ ''.
	model _ TextModel withText: text0 copy.
	editor _ TextEditorR new.
	m _ InnerTextMorph new.
	m privateOwner: TextModelMorph new.
	m model: model.
	editor morph: m.
	editor instVarNamed: 'emphasisHere' put: Array new.
	editor model: model.
	textComposition _ TextComposition new.
	textComposition
		setModel: model;
		extentForComposing: 300@300.
	editor textComposition: textComposition.
	textComposition editor: editor.
	textComposition composeAll.

	text1 _ 'some words' asText.
	editor addString: text1.
	self assert: model actualContents = text1.
	editor undo.
	self assert: model actualContents = text0.
	editor redo.
	self assert: model actualContents = text1.

	text2 _ ' additional inserted stuff' asText.
	editor addString: text2.
	self assert: model actualContents = (text1, text2).
	editor undo.
	self assert: model actualContents = text1.
	editor undo.
	self assert: model actualContents = text0.
	editor redo.
	self assert: model actualContents = text1.
	editor redo.
	self assert: model actualContents = (text1, text2).! !
!Object methodsFor: 'as yet unclassified' stamp: 'RABG 4/16/2024 22:02:58' prior: 16915680!
editorClassFor: textGetter
	"Enable any object to be the textProvider for a PluggableTextModel"
	^TextEditorR! !
!TextModel methodsFor: 'as yet unclassified' stamp: 'RABG 4/16/2024 22:02:58' prior: 16982787!
editorClass
	^TextEditorR! !
!WorldMorph methodsFor: 'as yet unclassified' stamp: 'RABG 4/16/2024 22:02:58' prior: 17007727!
recreateDefaultDesktop
	"
	Display extent
	For 1920@1076
	self runningWorld recreateDefaultDesktop
	"
	| editor |
	self whenUIinSafeState: [
		self hideTaskbar.
		(submorphs
			select: [ :ea | ea class == SystemWindow or: [ea class == TranscriptWindow]])
				do: [ :ea | ea delete ].
		TranscriptWindow openTranscript
			morphPosition: 4 @ 440;
			morphExtent: 1200 @ 556.
		editor := TextEditorR openTextEditor
			morphPosition: 516 @ 4;
			morphExtent: 1400 @ 992.
		editor setLabel: 'About Cuis'.
		editor model actualContents: Utilities defaultTextEditorContents.
		Theme current useTaskbar ifTrue: [self showTaskbar].
	].! !